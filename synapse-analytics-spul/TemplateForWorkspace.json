{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "synapse-analytics-spul"
		},
		"synapse-analytics-spul-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'synapse-analytics-spul-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:synapse-analytics-spul.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"synapse-analytics-spul-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsspul1234.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/ApplicationPeoplePL')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ApplicationPeopleDF",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "temp"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-03T10:04:55Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/ApplicationPeopleDF')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CSV_bronze_silver')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Copy the csv files from bronze to silver, add columns with the data source and time. Store the data as parquet files",
				"activities": [
					{
						"name": "csv_bronze_silver",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"BronzeCSV": {},
									"SilverCSV": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-04-02T11:32:35Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CSVtest')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Data flow1 test",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dataflow3 test",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-04-02T12:40:06Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Dataflow3 test')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/kamiel_bronze_silver')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Copy and edit the csv files from bronze to silver",
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-04-02T11:23:29Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/Dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/kamiel_test')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "get_filenames",
						"description": "Get the names of all files in the source folder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"description": "Perform the Copy activity for each file in the source folder",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_filenames').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Data flow1",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "Dataflow3 test",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"source1": {},
												"sink1": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "bronze_to_silver"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-02T16:55:53Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DelimitedText1')]",
				"[concat(variables('workspaceId'), '/dataflows/Dataflow3 test')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/transform_db_salespurchasedb')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "get_filenames",
						"description": "Get the names of all files in the source folder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "bronze_db_salespurchasedb_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "ParquetReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"description": "Perform the Copy activity for each file in the source folder",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_filenames').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "ParquetReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "bronze_db_salespurchasedb_parquet",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "silver_db_salespurchasedb_parquet",
											"type": "DatasetReference",
											"parameters": {
												"fileName": "@item().name"
											}
										}
									]
								},
								{
									"name": "Data flow1",
									"type": "ExecuteDataFlow",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "bronze_to_silver"
				},
				"annotations": [],
				"lastPublishTime": "2025-04-02T11:01:12Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/bronze_db_salespurchasedb_folder')]",
				"[concat(variables('workspaceId'), '/datasets/bronze_db_salespurchasedb_parquet')]",
				"[concat(variables('workspaceId'), '/datasets/silver_db_salespurchasedb_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ApplicationPeopleBronze')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-analytics-spul-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Application_People.csv",
						"folderPath": "bronze/csv",
						"fileSystem": "fsspul1234"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PersonID",
						"type": "String"
					},
					{
						"name": "FullName",
						"type": "String"
					},
					{
						"name": "PreferredName",
						"type": "String"
					},
					{
						"name": "SearchName",
						"type": "String"
					},
					{
						"name": "IsPermittedToLogon",
						"type": "String"
					},
					{
						"name": "LogonName",
						"type": "String"
					},
					{
						"name": "IsExternalLogonProvider",
						"type": "String"
					},
					{
						"name": "HashedPassword",
						"type": "String"
					},
					{
						"name": "IsSystemUser",
						"type": "String"
					},
					{
						"name": "IsEmployee",
						"type": "String"
					},
					{
						"name": "IsSalesperson",
						"type": "String"
					},
					{
						"name": "UserPreferences",
						"type": "String"
					},
					{
						"name": "PhoneNumber",
						"type": "String"
					},
					{
						"name": "FaxNumber",
						"type": "String"
					},
					{
						"name": "EmailAddress",
						"type": "String"
					},
					{
						"name": "Photo",
						"type": "String"
					},
					{
						"name": "CustomFields",
						"type": "String"
					},
					{
						"name": "OtherLanguages",
						"type": "String"
					},
					{
						"name": "LastEditedBy",
						"type": "String"
					},
					{
						"name": "ValidFrom",
						"type": "String"
					},
					{
						"name": "ValidTo",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-analytics-spul-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ApplicationPeopleSilver')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-analytics-spul-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "silver/csv/ApplicationPeopleSilver",
						"fileSystem": "fsspul1234"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-analytics-spul-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/BronzeCSV')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-analytics-spul-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze/csv",
						"fileSystem": "fsspul1234"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CityID;CityName;StateProvinceID;Location;LatestRecordedPopulation;LastEditedBy;ValidFrom;ValidTo",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-analytics-spul-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CSV_bronze')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-analytics-spul-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze/csv",
						"fileSystem": "fsspul1234"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CityID;CityName;StateProvinceID;Location;LatestRecordedPopulation;LastEditedBy;ValidFrom;ValidTo",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-analytics-spul-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CSVnewTest')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-analytics-spul-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze/csv",
						"fileSystem": "fsspul1234"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CityID;CityName;StateProvinceID;Location;LatestRecordedPopulation;LastEditedBy;ValidFrom;ValidTo",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-analytics-spul-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DelimitedText1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-analytics-spul-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze/csv",
						"fileSystem": "fsspul1234"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CityID",
						"type": "String"
					},
					{
						"name": "CityName",
						"type": "String"
					},
					{
						"name": "StateProvinceID",
						"type": "String"
					},
					{
						"name": "Location",
						"type": "String"
					},
					{
						"name": "LatestRecordedPopulation",
						"type": "String"
					},
					{
						"name": "LastEditedBy",
						"type": "String"
					},
					{
						"name": "ValidFrom",
						"type": "String"
					},
					{
						"name": "ValidTo",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-analytics-spul-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DelimitedText2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-analytics-spul-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "silver/csv",
						"fileSystem": "fsspul1234"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-analytics-spul-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DelimitedText3')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-analytics-spul-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze/csv",
						"fileSystem": "fsspul1234"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CityID;CityName;StateProvinceID;Location;LatestRecordedPopulation;LastEditedBy;ValidFrom;ValidTo",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-analytics-spul-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_up9')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-analytics-spul-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "silver",
						"fileSystem": "fsspul1234"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-analytics-spul-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-analytics-spul-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "silver/csv",
						"fileSystem": "fsspul1234"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-analytics-spul-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-analytics-spul-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "silver/csv",
						"fileSystem": "fsspul1234"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-analytics-spul-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ParquetOutputSilver')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-analytics-spul-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "silver/csv",
						"fileSystem": "fsspul1234"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-analytics-spul-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_up9')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-analytics-spul-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze",
						"fileSystem": "fsspul1234"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CityID",
						"type": "String"
					},
					{
						"name": "CityName",
						"type": "String"
					},
					{
						"name": "StateProvinceID",
						"type": "String"
					},
					{
						"name": "Location",
						"type": "String"
					},
					{
						"name": "LatestRecordedPopulation",
						"type": "String"
					},
					{
						"name": "LastEditedBy",
						"type": "String"
					},
					{
						"name": "ValidFrom",
						"type": "String"
					},
					{
						"name": "ValidTo",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-analytics-spul-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/bronze_db_salespurchasedb_folder')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-analytics-spul-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "databases"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze/databases/SalesPurchaseDB",
						"fileSystem": "fsspul1234"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-analytics-spul-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/bronze_db_salespurchasedb_parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-analytics-spul-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "databases"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "bronze/databases/SalesPurchaseDB",
						"fileSystem": "fsspul1234"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-analytics-spul-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/silver_db_salespurchasedb_parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "synapse-analytics-spul-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "databases"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "silver/databases/SalesPurchaseDB",
						"fileSystem": "fsspul1234"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/synapse-analytics-spul-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapse-analytics-spul-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('synapse-analytics-spul-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapse-analytics-spul-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('synapse-analytics-spul-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ApplicationPeopleDF')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ApplicationPeopleBronze",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ApplicationPeopleSilver",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          PersonID as string,",
						"          FullName as string,",
						"          PreferredName as string,",
						"          SearchName as string,",
						"          IsPermittedToLogon as string,",
						"          LogonName as string,",
						"          IsExternalLogonProvider as string,",
						"          HashedPassword as string,",
						"          IsSystemUser as string,",
						"          IsEmployee as string,",
						"          IsSalesperson as string,",
						"          UserPreferences as string,",
						"          PhoneNumber as string,",
						"          FaxNumber as string,",
						"          EmailAddress as string,",
						"          Photo as string,",
						"          CustomFields as string,",
						"          OtherLanguages as string,",
						"          LastEditedBy as string,",
						"          ValidFrom as string,",
						"          ValidTo as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"cast1 derive(DataSource = \"Application CSV folder\",",
						"          TimestampOfLoading = currentTimestamp()) ~> derivedColumn1",
						"source1 cast(output(",
						"          PersonID as integer,",
						"          FullName as string,",
						"          PreferredName as string,",
						"          SearchName as string,",
						"          IsPermittedToLogon as boolean,",
						"          LogonName as string,",
						"          IsExternalLogonProvider as boolean,",
						"          HashedPassword as string,",
						"          IsSystemUser as boolean,",
						"          IsEmployee as boolean,",
						"          IsSalesperson as boolean,",
						"          UserPreferences as string,",
						"          PhoneNumber as string,",
						"          FaxNumber as string,",
						"          EmailAddress as string,",
						"          Photo as string,",
						"          CustomFields as string,",
						"          OtherLanguages as string,",
						"          LastEditedBy as integer,",
						"          ValidFrom as timestamp,",
						"          ValidTo as timestamp",
						"     ),",
						"     errors: true) ~> cast1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ApplicationPeopleBronze')]",
				"[concat(variables('workspaceId'), '/datasets/ApplicationPeopleSilver')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataflow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Parquet1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CityID as string,",
						"          CityName as string,",
						"          StateProvinceID as string,",
						"          Location as string,",
						"          LatestRecordedPopulation as string,",
						"          LastEditedBy as string,",
						"          ValidFrom as string,",
						"          ValidTo as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive(data_source = \"original csv folder\",",
						"          date_time_of_loading = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DelimitedText1')]",
				"[concat(variables('workspaceId'), '/datasets/Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataflow2')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "BronzeCSV",
								"type": "DatasetReference"
							},
							"name": "BronzeCSV"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference"
							},
							"name": "SilverCSV"
						}
					],
					"transformations": [
						{
							"name": "CSVnewColumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {CityID;CityName;StateProvinceID;Location;LatestRecordedPopulation;LastEditedBy;ValidFrom;ValidTo} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> BronzeCSV",
						"BronzeCSV derive(dataSource = \"Application CSV folder\",",
						"          DatetimeOfExtract = currentTimestamp()) ~> CSVnewColumns",
						"CSVnewColumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SilverCSV"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/BronzeCSV')]",
				"[concat(variables('workspaceId'), '/datasets/DelimitedText2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataflow3 test')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ParquetOutputSilver",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CityID as integer,",
						"          CityName as string,",
						"          StateProvinceID as integer,",
						"          Location as string,",
						"          LatestRecordedPopulation as integer,",
						"          LastEditedBy as string,",
						"          ValidFrom as timestamp,",
						"          ValidTo as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive(DataSource = \"Application CSV folder\",",
						"          TimestampOfLoad = currentTimestamp()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DelimitedText1')]",
				"[concat(variables('workspaceId'), '/datasets/ParquetOutputSilver')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_dw_db')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Script to create the datawarehouse database",
				"folder": {
					"name": "datawarehouse_DDL_scripts"
				},
				"content": {
					"query": "CREATE DATABASE [Spulletjes_DW]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_ext_data_source_GoldLayer')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "datawarehouse_DDL_scripts"
				},
				"content": {
					"query": "USE [spulletjes_DW]\n\nCREATE EXTERNAL DATA SOURCE [GoldLayer] WITH (\n\tLOCATION = 'abfss://fsspul1234@dlsspul1234.dfs.core.windows.net/gold/'\n)\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "spulletjes_DW",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_ext_data_source_SilverLayer')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "datawarehouse_DDL_scripts"
				},
				"content": {
					"query": "USE [spulletjes_DW]\n\nCREATE EXTERNAL DATA SOURCE SilverLayer WITH (\n    LOCATION = 'abfss://fsspul1234@dlsspul1234.dfs.core.windows.net/silver/'\n)",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "spulletjes_DW",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_ext_file_format')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "datawarehouse_DDL_scripts"
				},
				"content": {
					"query": "USE [spulletjes_DW]\n\nCREATE EXTERNAL FILE FORMAT ParquetFormat\nWITH (\n    FORMAT_TYPE = PARQUET\n)",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_ext_table_FactSales_NOTFINISHED')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "USE [spulletjes_DW]\n\nCREATE EXTERNAL TABLE [dbo].[FactSales]\n(\n\t [Id] INT\n\t -- needs columns here\n)\nWITH\n(\n\tLOCATION = '/FactSales',\n\tDATA_SOURCE = [GoldLayer],\n\tFILE_FORMAT = [ParquetFormat]\n)\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "spulletjes_DW",
						"poolName": "Built-in"
					},
					"resultLimit": -1
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_view_FactSales')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "datawarehouse_DDL_scripts"
				},
				"content": {
					"query": "USE [spulletjes_DW]\nGO\n\nCREATE VIEW vw_FactSales AS\nSELECT\n    [ol].[OrderLineID]\n    , [ol].[OrderID]\n    , [ol].[StockItemID]\n    , [ol].[Description]\n    , [ol].[PackageTypeID]\n    , [ol].[Quantity]\n    , [ol].[UnitPrice]\n    , [ol].[TaxRate]\n    , [ol].[PickedQuantity]\n    , [ol].[PickingCompletedWhen] AS [ol_PickingCompletedWhen]\n    , [ol].[LastEditedBy] AS [ol_LastEditedBy]\n    , [ol].[LastEditedWhen] AS [ol_LastEditedWhen]\n\n    , [o].[CustomerID]\n    , [o].[SalespersonPersonID]\n    -- , [o].[PickedByPersonID]\n    -- , [o].[ContactPersonID]\n    -- , [o].[BackorderOrderID]\n    , [o].[OrderDate]\n    -- , [o].[ExpectedDeliveryDate]\n    -- , [o].[CustomerPurchaseOrderNumber]\n    -- , [o].[IsUndersupplyBackordered]\n    -- , [o].[Comments]\n    -- , [o].[DeliveryInstructions]\n    -- , [o].[InternalComments]\n    , [o].[PickingCompletedWhen] AS [o_PickingCompletedWhend]\n    , [o].[LastEditedBy] AS [o_LastEditedBy]\n    , [o].[LastEditedWhen] AS [o_LastEditedWhen]\nFROM\n    OPENROWSET(\n        BULK 'https://dlsspul1234.dfs.core.windows.net/fsspul1234/silver/databases/SalesPurchaseDB/Sales.OrderLines.parquet',\n        FORMAT = 'PARQUET'\n    ) AS [ol] -- OrderLines\nJOIN\n    OPENROWSET(\n        BULK 'https://dlsspul1234.dfs.core.windows.net/fsspul1234/silver/databases/SalesPurchaseDB/Sales.Orders.parquet',\n        FORMAT = 'PARQUET'\n    ) AS [o] -- Orders\nON\n    [ol].[OrderID] = [o].[OrderID]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "spulletjes_DW",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		}
	]
}